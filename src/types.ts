export const enum TokenName {
    // End of source indicator.
    EOS,

    // Punctuators (ECMA-262, section 7.7, page 15).
    LParen,
    RParen,
    LBrack,
    RBrack,
    LBrace,
    RBrace,
    Colon,
    Semicolon,
    Period,
    Conditional,
    Arrow,
    Assign,
    AssignBitOr,
    AssignBitXor,
    AssignBitAnd,
    AssignShl,
    AssignSar,
    AssignShr,
    AssignAdd,
    AssignSub,
    AssignMul,
    AssignDiv,
    AssignMod,

    // Binary operators sorted by precedence.
    Comma,
    Or,
    And,
    BitOr,
    BitXor,
    BitAnd,
    SHL,
    SAR,
    SHR,
    Add,
    Sub,
    Mul,
    Div,
    Mod,
    Exp,

    // Compare operators sorted by precedence.
    Equal,
    NotEqual,
    LessThan,
    GreaterThan,
    LessThanOrEqual,
    GreaterThanOrEqual,

    // Unary operators.
    Not,
    BitNot,
    Inc,
    Dec,
    Delete,

    // Keywords
    Anonymous,
    As,
    Assembly,
    Break,
    Constant,
    Continue,
    Contract,
    Do,
    Else,
    Enum,
    Event,
    External,
    For,
    Function,
    Hex,
    If,
    Indexed,
    Interface,
    Internal,
    Import,
    Is,
    Library,
    Mapping,
    Memory,
    Modifier,
    New,
    Payable,
    Public,
    Pragma,
    Private,
    Pure,
    Return,
    Returns,
    Storage,
    Struct,
    Throw,
    Using,
    Var,
    View,
    While,

    // Ether subdenominations
    SubWei,
    SubSzabo,
    SubFinney,
    SubEther,
    SubSecond,
    SubMinute,
    SubHour,
    SubDay,
    SubWeek,
    SubYear,
    // type keywords
    Int,
    UInt,
    Bytes,
    Byte,
    String,
    Address,
    Bool,
    Fixed,
    UFixed,
    IntM,
    UIntM,
    BytesM,
    FixedMxN,
    UFixedMxN,
    TypesEnd,

    // Literals
    TrueLiteral,
    FalseLiteral,
    Number,
    StringLiteral,
    CommentLiteral,

    // Identifiers (not keywords or future reserved words).
    Identifier,

    // Keywords reserved for future use.
    Abstract,
    After,
    Case,
    Catch,
    Default,
    Final,
    In,
    Inline,
    Let,
    Match,
    NullLiteral,
    Of,
    Relocatable,
    Static,
    Switch,
    Try,
    Type,
    TypeOf,

    // Illegal token - not able to scan.
    Illegal,

    // Scanner-internal use only.
    Whitespace
};
